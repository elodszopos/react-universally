.react-grid-layout {
  pointer-events: none;
  position: relative;
  transition: height 200ms ease;
}

#particles {
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
}

.react-grid-item {
  box-sizing: border-box;
  overflow: hidden;
  pointer-events: auto;
  position: relative;
  display: inline-block;
  background-color: #0c1926;
  border-radius: 5px;
  box-shadow: 2px 2px 5px 3px rgba(0, 0, 0, 0.3);
  transition: all 0.2s cubic-bezier(0.165, 0.84, 0.44, 1);

  &:hover {
    border: 2px solid green;
  }

  &:not(.react-grid-placeholder) {
    background-color: #0c1926;
    border: 1px solid #000;
  }

  &.resizing {
    opacity: 0.9;
    will-change: width, height;
    z-index: 1;
  }

  &.static {
    background: #cce;
  }

  .text {
    bottom: 0;
    font-size: 24px;
    height: 24px;
    left: 0;
    margin: auto;
    position: absolute;
    right: 0;
    text-align: center;
    top: 0;
  }

  .minMax {
    font-size: 12px;
  }

  .add {
    cursor: pointer;
  }

  &.cssTransforms {
    transition-property: transform;
  }

  &.react-draggable-dragging {
    transition: none;
    will-change: transform;
    z-index: 3;
  }

  &.react-grid-placeholder {
    background: rgba(255, 166, 0, 0.83);
    opacity: 0.2;
    transition-duration: 100ms;
    user-select: none;
    z-index: 2;
  }

  > .react-resizable-handle {
    background: url(./resize_corner.svg) no-repeat bottom right content-box;
    bottom: 0;
    box-sizing: border-box;
    cursor: se-resize;
    height: 40px;
    padding: 0 3px 3px 0;
    position: absolute;
    right: 0;
    width: 40px;
  }
}

.react-grid-dragHandleExample {
  cursor: grab;
}

.hovereffect {
  width: 100%;
  height: 100%;
  float: left;
  overflow: hidden;
  position: relative;
  text-align: center;
  cursor: default;
  background: linear-gradient(45deg, #ff89e9 0%,#05abe0 100%);
}

.hovereffect .overlay {
  width: 100%;
  height: 100%;
  position: absolute;
  overflow: hidden;
  top: 0;
  left: 0;
  padding: 3em;
  text-align: left;
}

.hovereffect img {
  display: block;
  position: relative;
  max-width: none;
  width: calc(100% + 60px);
  height: 100%;
  transition: opacity 0.35s, transform 0.45s;
  transform: translate3d(-40px,0,0);
}

.hovereffect h2 {
  text-transform: uppercase;
  color: #fff;
  position: relative;
  font-size: 17px;
  background-color: transparent;
  text-shadow:
    -1px -1px 0 #000,
    1px -1px 0 #000,
    -1px 1px 0 #000,
    1px 1px 0 #000;
  text-align: left;
}

.hovereffect .overlay:before {
  position: absolute;
  top: 20px;
  right: 20px;
  bottom: 20px;
  left: 20px;
  border: 1px solid #fff;
  content: '';
  opacity: 0;
  filter: alpha(opacity=0);
  transition: opacity 0.35s, transform 0.45s;
  transform: translate3d(-20px,0,0);
}

.hovereffect a, .hovereffect p {
  color: #FFF;
  opacity: 0;
  filter: alpha(opacity=0);
  transition: opacity 0.35s, transform 0.45s;
  transform: translate3d(-10px,0,0);
}

.hovereffect:hover img {
  opacity: 0.6;
  filter: alpha(opacity=60);
  transform: translate3d(0,0,0);
}

.hovereffect:hover .overlay:before,
.hovereffect:hover a, .hovereffect:hover p {
  opacity: 1;
  filter: alpha(opacity=100);
  transform: translate3d(0,0,0);
}
